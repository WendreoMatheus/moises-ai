version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      LANG: en_US.utf8
      LC_ALL: en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend.dockerfile
    container_name: moises_backend
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./Makefile:/app/Makefile
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    command: 
      - make
      - server

  frontend:
    build:
      context: .
      dockerfile: frontend.dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    container_name: moises_frontend
    environment:
      - VITE_API_URL=${VITE_API_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: